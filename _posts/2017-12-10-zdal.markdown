---
layout:     post
title:      "ZDAL-分布式数据存储框架"
subtitle:   "分库分表"
date:       2017-12-16 13:30:00
author:     "ZJF"
header-img: "img/post-bg-unix-linux.jpg"
catalog: false
tags:
    - 蚂蚁中间件
---

## 基础概念
Java语言和数据库比较基础的交互方式是使用JDBC(Java DataBase Connectivity)
* JDBC是一组由JAVA API组成的可以和多种数据库交互的接口,也可以简单理解为一些Jar包提供驱动服务
* JDBC提供了一系列例如建立连接、预编译SQL等API来简化与数据库的交互过程
* JAVA程序员基于JDBC开发,可以不必关心和数据库建立连接以及SQL处理的具体实现,可以专注在结合业务逻辑的SQL设计上

ZDAL是一个基于标准JDBC的`分布式`数据存储框架,在适配多种数据库的基础上提供了
* 完善的数据拆分能力
* 分布式Sequence
* 数据源弹性伸缩、流量分发等集群策略

本文主要针对数据拆分能力做介绍

ZDAL架构图
![img](/img/in-post/zdal-architecture.jpg)

## 数据拆分
在单库不分表的场景下,数据量的增大很容易产生数据库的性能问题
* 例如单表存储1000w记录,查询会非常耗时
* 数据太大也会对单台机器的容量产生压力,从而影响性能

ZDAL的分布式的存储架构解决了单库的容量瓶颈以及单表的性能瓶颈

Tip:ZDAL和ORM框架(iBatis)的区别
* 
* 


我在项目中使用的是Sofa4集成ZDAL和iBatis,接下来结合相关配置进行介绍

Sofa框架提供了对ZDAL的集成和支持,可以使用sofa标签声明配置源

```XML
	<!-- 数据源 -->
	<sofa:zdal-jdbc id="DataSource">
		<sofa:appDataSourceName value="bkxxxApplicationDataSource" />
	</sofa:zdal-jdbc>
```

```XML
	<bean id="bkxxx" class="com.alipay.zdal.client.config.bean.ZdalAppBean">
		<property name="appName" value="bkxxx" />
		<property name="dbmode" value="stable" />
		<property name="idcName" value="gz00" />
		<property name="appDataSourceList">
			<list>
				<ref bean="bkxxxApplicationDataSource" />
			</list>
		</property>
	</bean>
```

```XML
<bean id="bkxxxApplicationDataSource" class="com.alipay.zdal.client.config.bean.AppDataSourceBean">
		<property name="appDataSourceName" value="bkxxxApplicationDataSource" />
		<property name="dataBaseType" value="MYSQL" />
		<property name="zoneError" value="EXCEPTION" />
		<property name="appRule" ref="bkxxxApplicationDataSourceRule" />
		<property name="physicalDataSourceSet">
			<set>
				<ref bean="bkxxxDataSourcePhysics" />
			</set>
		</property>
		<property name="groupDataSourceRuleMap">
			<map>
				<entry key="group_0" value="bkxxx_ds:r10w10" />
			</map>
		</property>
	</bean>
```

```XML
<bean id="bkxxxDataSourcePhysics"
		  class="com.alipay.zdal.client.config.bean.PhysicalDataSourceBean">
		<property name="name" value="bkxxxDataSourcePhysics" />
		<property name="type" value="MYSQL" />
		<property name="jdbcUrl">
			<value><![CDATA[jdbc:mysql://dev3.mysql.alibank.net:3306/bkxxx?useUnicode=true&amp;characterEncoding=utf8]]></value>
		</property>
		<property name="userName" value="bkxxx" />
		<property name="password" value="6058184bc19f14aa0bf3cb262721f0df" />
		<property name="minConn" value="10" />
		<property name="maxConn" value="15" />
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="blockingTimeoutMillis" value="5000" />
		<property name="idleTimeoutMinutes" value="30" />
		<property name="preparedStatementCacheSize" value="100" />
		<property name="queryTimeout" value="180" />
		<property name="prefill" value="false" />
		<property name="maxReadThreshold" value="100" />
		<property name="maxWriteThreshold" value="100" />
		<property name="logicDbNameSet">
			<set>
				<value><![CDATA[bkxxx_ds]]></value>
			</set>
		</property>
	</bean>
```

```XML
	<bean id="bkxxxApplicationDataSourceRule" class="com.alipay.zdal.rule.config.beans.AppRule"
		  init-method="init">
		<property name="masterRule" ref="bkxxxApplicationDataSourceElasticRule" />
	</bean>
```

```XML
<bean id="bkxxxApplicationDataSourceElasticRule" class="com.alipay.zdal.rule.config.beans.ShardRule">
		<property name="dbtype" value="MYSQL" />
		<property name="tableRules">
			<map>
				<entry key="bkxxx_table" value-ref="bkxxx_table_rule" />
			</map>
		</property>
</bean>
```

```XML
<bean id="bkxxx_table_rule" class="com.alipay.zdal.rule.config.beans.TableRule" init-method="init">
		<property name="logicTableName" value="bkxxx_table" />
		<property name="tbSuffix">
			<value><![CDATA[groovyThroughAllDBTableList:def list = [];(0..19).each{ i ->list.add("0"+"${i}".padLeft(3,"0") );}; return list;]]></value>
		</property>
		<property name="dbIndexes">
			<value><![CDATA[bkxxx_ds]]></value>
		</property>
		<property name="tbRuleArray">
			<list>
				<value><![CDATA[return com.mybank.bkxxx.common.dal.parseTableIndexMethod(业务字段).padLeft(4,"0");]]></value>
			</list>
		</property>
		<property name="dbRuleList">
			<list>
				<value><![CDATA[ if(null != #id#) return 0;]]></value>
			</list>
		</property>
	</bean>
```













































